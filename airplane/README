ΕΡΓΑΣΙΑ JAVA - ΒΑΒΟΥΛΑΣ ΣΤΕΦΑΝΟΣ

Compile and Run
->Inside the directory-package:
javac *.java
cd ..
java airplane.MyJava

Implemented Assignment 3 (previously implemented in C++) in Java

Πληροφορίες:

PlaneComponent.java:
Η κλάση είναι abstract και η μόνη προσαρμογή που έχω κάνει πέρα απο τα ζητούμενα της εκφώνησης, είναι ο ορισμος μεταβλητών που συμβολίζουν αν έχει ολοκληρωθεί η εργασία του κάθε υπαλλήλου στο συγκεκριμένο κομμάτι του αεροπλάνου(μάζι με 3 setter συναρτήσεις ώστε η τιμή τους να μετατρέπεται σε true από τις συναρτήσεις WorkOn των υπαλληλων, καθως και 3 is συναρτησεις για να μπορώ να πάρω τις τιμές τους)

PassengerCompartment.java:
Η κλάση κληρονομεί από την PlaneComponent.java και η μόνη προσαρμογή που έχω κάνει πέρα απο τα ζητούμενα της εκφώνησης, είναι ο ορισμός μιας μεταβλητής InnerPComp στο Passenger Compartment, η οποία παίρνει τιμή στον constructor: true αν είναι δυνατόν να υπάρχει εσωτερικό Passenger Compartment μέσα στο αρχικό και false για να μην υπάρχει.
Εφόσον η τιμή του InnerPComp που δόθηκε στον constructor είναι true, τότε τρέχει σε αυτόν ένα πείραμα τύχης για το εάν θα έχει εσωτερικό Passenger Compartment.

Plane.java:
Ορισμός της κλάσης Plane. Έχω ορίσει μία μεταβλητή N(καθώς και ένα getter για αυτήν), η οποία "κρατά" τον τυχαίο αριθμό από main Passenger Compartments(σημειώνω main γιατί κάποια από αυτά ενδέχεται να έχουν και εσωτερικά, δικά τους Passenger Compartments).
Στην υλοποίηση της ready_check εκτελεί την ready_check για κάθε κομμάτι του αεροπλάνου που περιέχει και επιστρέφει τιμή true μόνο αν σε όλα τα κομμάτια έχουν τελειώσει οι απαραίτητες εργασίες από τους υπαλλήλους.

-->Όσον αφορά τις συναρτήσεις process-WorkOn-Report:
Οι process στην κλάση Plane είναι overloaded συναρτήσεις με βάση τον εκάστοτε υπάλληλο. Αυτό γίνεται προκειμένου όπως αναφέρεται στην εκφώνηση ο κάθε υπάλληλος να δουλέψει μόνο στους χώρους όπου απαιτείται. Μέσω της εκάστοτε process του αεροπλάνου, οι υπάλληλοι "δίνονται" στο κάθε κομμάτι του αεροπλάνου που απαιτείται να δουλέψουν. Έκει καλείται η συνάρτηση WorkOn για κάθε υπάλληλο, η οποία θέτει την αντίστοιχη δουλεία (SecurityWorkDone, CleaningWorkDone, MaintenanceWorkDone) ως true. Στη συνέχεια καλέιται για τον κάθε υπάλληλο η συνάρτηση Report, όπου είναι πάλι overloaded στην κλάση Employee, ώστε να εκτυπώνει πάντα το σωστό μήνυμα ανάλογα με το κομμάτι του αεροπλάνου στο οποίο εργάζεται.
Επιπλέον, σε κομμάτια αεροπλάνου που περιέχουν μέσα τους άλλα κομμάτια αεροπλάνου(π.χ. το Equipment Compartment μεσα στο Cargo Bay και το εσωτερικό Passenger Compartment) στην process καλείται και process για αυτά τα εσωτερικά κομμάτια.
Όλα τα παραπάνω ελέγχονται για την επιτυχία τους μέσω των ready_check συναρτήσεων, οι οποίες επίσης ελέγχουν τα εσωτερικά κομμάτια για την ετοιμότητα τους, ενώ η ready_check του αεροπλάνου τις ελέγχει όλες καταλήγοντας σε μήνυμα για την ετοιμότητα του αεροπλάνου.

Σημειώσεις:
Υπάρχουν getters για όλα τα απαραίτητα μέλη των κλάσεων.
Σε όσες συναρτήσεις θέλω να γίνεται override έχω βάλει το annotation προς αποφυγή λαθών
Στον constructor των subclasses των κλάσεων Employee-PlaneComponent, έχω χρησιμοποιήσει την εντολή super, ώστε να αρχικοποιούνται τιμές των super κλάσεων χωρίς να χρειάζεται να είναι protected. Έτσι, όλες μου οι μεταβλητές έχουν παραμείνει private για να μην μπορούν να αλλάζουν τις τιμές τους συναρτήσεις που δεν ανήκουν στην εκάστοτε κλαση.






